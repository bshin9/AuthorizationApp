{"ast":null,"code":"import _defineProperty from \"/Users/changhyunshin/Documents/AuthenticateApp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/changhyunshin/Documents/AuthenticateApp/client/src/views/SignUp.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport httpClient from \"../httpClient\"; // sign up form behaves almost identically to log in form. We could create a flexible Form component to use for both actions, but for now we'll separate the two:\n\nclass SignUp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fields: {\n        name: \"\",\n        email: \"\",\n        password: \"\"\n      }\n    };\n  }\n\n  onInputChange(evt) {\n    this.setState({\n      fields: _objectSpread({}, this.state.fields, {\n        [evt.target.name]: evt.target.value\n      })\n    });\n  }\n\n  onFormSubmit(evt) {\n    evt.preventDefault();\n    httpClient.signUp(this.state.fields).then(user => {\n      this.setState({\n        fields: {\n          name: \"\",\n          email: \"\",\n          password: \"\"\n        }\n      });\n\n      if (user) {\n        this.props.onSignUpSuccess(user);\n        this.props.history.push(\"/\");\n      }\n    });\n  }\n\n  render() {\n    const _this$state$fields = this.state.fields,\n          name = _this$state$fields.name,\n          email = _this$state$fields.email,\n          password = _this$state$fields.password;\n    return React.createElement(\"div\", {\n      className: \"SignUp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"note\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Sign Up Here!\")), React.createElement(\"div\", {\n      className: \"form-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onChange: this.onInputChange.bind(this),\n      onSubmit: this.onFormSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      name: \"name\",\n      value: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Email\",\n      name: \"email\",\n      value: email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      name: \"password\",\n      value: password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Sign Up\"))))\n    /* <div className=\"sing\">\n      <form\n        onChange={this.onInputChange.bind(this)}\n        onSubmit={this.onFormSubmit.bind(this)}\n      >\n        <div className=\"note\">\n          <p>Sign Up Here!</p>\n        </div>\n         <div className=\"form-content\">\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Name\"\n                  name=\"name\"\n                  value={name}\n                  className=\"form-control\"\n                />\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  value={email}\n                  className=\"form-control\"\n                />\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"form-group\">\n                <input\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  value={password}\n                  className=\"form-control\"\n                />\n              </div>\n            </div>\n          </div>\n          <button type=\"button\" className=\"btnSubmit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div> */\n    ;\n  }\n\n}\n\nexport default SignUp;","map":{"version":3,"sources":["/Users/changhyunshin/Documents/AuthenticateApp/client/src/views/SignUp.jsx"],"names":["React","httpClient","SignUp","Component","state","fields","name","email","password","onInputChange","evt","setState","target","value","onFormSubmit","preventDefault","signUp","then","user","props","onSignUpSuccess","history","push","render","bind"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport httpClient from \"../httpClient\";\n\n// sign up form behaves almost identically to log in form. We could create a flexible Form component to use for both actions, but for now we'll separate the two:\nclass SignUp extends React.Component {\n  state = {\n    fields: { name: \"\", email: \"\", password: \"\" }\n  };\n\n  onInputChange(evt) {\n    this.setState({\n      fields: {\n        ...this.state.fields,\n        [evt.target.name]: evt.target.value\n      }\n    });\n  }\n\n  onFormSubmit(evt) {\n    evt.preventDefault();\n    httpClient.signUp(this.state.fields).then(user => {\n      this.setState({ fields: { name: \"\", email: \"\", password: \"\" } });\n      if (user) {\n        this.props.onSignUpSuccess(user);\n        this.props.history.push(\"/\");\n      }\n    });\n  }\n\n  render() {\n    const { name, email, password } = this.state.fields;\n    return (\n      <div className=\"SignUp\">\n        <div className=\"row\">\n            <div className=\"note\">\n              <p>Sign Up Here!</p>\n            </div>\n\t\t\t<div className=\"form-content\"></div>\n            <form\n              onChange={this.onInputChange.bind(this)}\n              onSubmit={this.onFormSubmit.bind(this)}\n            >\n              <input type=\"text\" placeholder=\"Name\" name=\"name\" value={name} />\n              <input\n                type=\"text\"\n                placeholder=\"Email\"\n                name=\"email\"\n                value={email}\n              />\n              <input\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                value={password}\n              />\n              <button>Sign Up</button>\n            </form>\n          </div>\n        </div>\n      /* <div className=\"sing\">\n        <form\n          onChange={this.onInputChange.bind(this)}\n          onSubmit={this.onFormSubmit.bind(this)}\n        >\n          <div className=\"note\">\n            <p>Sign Up Here!</p>\n          </div>\n\n          <div className=\"form-content\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    value={name}\n                    className=\"form-control\"\n                  />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    value={email}\n                    className=\"form-control\"\n                  />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={password}\n                    className=\"form-control\"\n                  />\n                </div>\n              </div>\n            </div>\n            <button type=\"button\" className=\"btnSubmit\">\n              Submit\n            </button>\n          </div>\n        </form>\n      </div> */\n    );\n  }\n}\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}